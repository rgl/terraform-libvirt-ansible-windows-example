# see https://docs.ansible.com/ansible-core/2.19/os_guide/intro_windows.html
# see https://docs.ansible.com/ansible-core/2.19/os_guide/windows_usage.html
# see https://docs.ansible.com/ansible-core/2.19/os_guide/windows_winrm.html#winrm-limitations
# see https://github.com/ansible-collections/ansible.windows
# see https://github.com/ansible-collections/community.windows

- name: Windows Example
  hosts: windows
  gather_facts: true
  tasks:
    # NB cloud-init data volume normally is assigned the D drive letter, which
    #    we want to use in our data disk.
    # see https://github.com/ansible-collections/community.windows/issues/135
    - name: Remove the cloud-init data disk drive letter
      ansible.windows.win_powershell:
        script: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = 'Stop'
          $ProgressPreference = 'SilentlyContinue'
          $Ansible.Changed = $false
          $volume = Get-Volume -FileSystemLabel cidata -ErrorAction SilentlyContinue
          if ($volume -and $volume.DriveLetter) {
            $stdout = mountvol.exe "$($volume.DriveLetter):" /d
            if ($LASTEXITCODE) {
              throw "Failed to remove the cloud-init data disk drive letter $($volume.DriveLetter): #$LASTEXITCODE $stdout"
            }
            $Ansible.Changed = $true
          }

    - name: Initialize the data disk in the D drive
      block:
        - name: Initialize the data disk
          community.windows.win_initialize_disk:
            disk_number: 1
            style: mbr
        - name: Partition the data disk
          community.windows.win_partition:
            drive_letter: D
            disk_number: 1
            partition_size: -1
        - name: Create the data filesystem
          community.windows.win_format:
            drive_letter: D
            file_system: ntfs
            new_label: data

    - name: Install Chocolatey
      chocolatey.chocolatey.win_chocolatey:
        name: chocolatey
        # see https://community.chocolatey.org/packages/chocolatey
        # renovate: datasource=nuget:chocolatey depName=chocolatey
        version: '2.5.1'
        state: downgrade

    - name: Install Notepad3
      chocolatey.chocolatey.win_chocolatey:
        name: notepad3
        # https://community.chocolatey.org/packages/notepad3
        # renovate: datasource=nuget:chocolatey depName=notepad3
        version: '6.25.822.1'
        state: downgrade

    - name: Install Firefox
      block:
        - name: Install Firefox
          chocolatey.chocolatey.win_chocolatey:
            name: firefox
            # https://community.chocolatey.org/packages/firefox
            # renovate: datasource=nuget:chocolatey depName=firefox
            version: '143.0.1'
            state: downgrade
            package_params: /l:en-US
        - name: Install SetDefaultBrowser
          chocolatey.chocolatey.win_chocolatey:
            name: setdefaultbrowser
            # https://community.chocolatey.org/packages/setdefaultbrowser
            # renovate: datasource=nuget:chocolatey depName=setdefaultbrowser
            version: '1.5.0'
            state: downgrade
        - name: Set Firefox as the default browser
          ansible.windows.win_powershell:
            script: |
              Set-StrictMode -Version Latest
              $ErrorActionPreference = 'Stop'
              $ProgressPreference = 'SilentlyContinue'
              $Ansible.Changed = $false
              $browser = @((SetDefaultBrowser | Where-Object {$_ -like 'HKLM Firefox-*'}) -split ' ')
              $browserId = $browser[1]
              $path = "$($Ansible.Tmpdir)\AppAssociations.xml"
              Dism /Online "/Export-DefaultAppAssociations:$path"
              [xml]$doc = Get-Content $path
              $node = $doc.SelectSingleNode("/DefaultAssociations/Association[@ApplicationName='Firefox']")
              if (!$node) {
                SetDefaultBrowser @browser
                $Ansible.Changed = $true
              }

    - name: Install Meld
      chocolatey.chocolatey.win_chocolatey:
        name: meld
        # https://community.chocolatey.org/packages/meld
        # renovate: datasource=nuget:chocolatey depName=meld
        version: '3.22.2'
        state: downgrade

    - name: Install Git
      block:
        - name: Install Git
          chocolatey.chocolatey.win_chocolatey:
            name: git
            # https://community.chocolatey.org/packages/git
            # renovate: datasource=nuget:chocolatey depName=git
            version: '2.51.0'
            state: downgrade
            package_params: /GitOnlyOnPath /NoAutoCrlf /SChannel
        - name: Configure Git
          ansible.windows.win_powershell:
            script: |
              Set-StrictMode -Version Latest
              $ErrorActionPreference = 'Stop'
              $ProgressPreference = 'SilentlyContinue'
              $Ansible.Changed = $false
              function Set-GitConfig($name, $value) {
                $currentValue = git config --global $name
                if ($LASTEXITCODE -or $currentValue -cne $value) {
                  git config --global $name ($value -replace '\\','\\' -replace '"','\"')
                  if ($LASTEXITCODE) {
                    throw "failed to execute git config with exit code $LASTEXITCODE"
                  }
                  $Ansible.Changed = $true
                }
              }
              Set-GitConfig core.longpaths true
              Set-GitConfig user.name 'Rui Lopes'
              Set-GitConfig user.email 'rgl@ruilopes.com'
              Set-GitConfig diff.guitool meld
              Set-GitConfig difftool.meld.path 'C:/Program Files/Meld/Meld.exe'
              Set-GitConfig difftool.meld.cmd '"C:/Program Files/Meld/Meld.exe" "$LOCAL" "$REMOTE"'
              Set-GitConfig merge.tool meld
              Set-GitConfig mergetool.meld.path 'C:/Program Files/Meld/Meld.exe'
              Set-GitConfig mergetool.meld.cmd '"C:/Program Files/Meld/Meld.exe" "$LOCAL" "$BASE" "$REMOTE" --auto-merge --output "$MERGED"'

    - name: Install Git Extensions
      block:
        - name: Install Git Extensions
          chocolatey.chocolatey.win_chocolatey:
            name: gitextensions
            # https://community.chocolatey.org/packages/gitextensions
            # renovate: datasource=nuget:chocolatey depName=gitextensions
            version: '5.2.1'
            state: downgrade
        - name: Configure Git Extensions
          ansible.windows.win_powershell:
            script: |
              Set-StrictMode -Version Latest
              $ErrorActionPreference = 'Stop'
              $ProgressPreference = 'SilentlyContinue'
              $Ansible.Changed = $false
              function Set-GitExtensionsStringSetting($name, $value) {
                $settingsPath = "$env:APPDATA\GitExtensions\GitExtensions\GitExtensions.settings"
                [xml]$settingsDocument = Get-Content $settingsPath
                $node = $settingsDocument.SelectSingleNode("/dictionary/item[key/string[text()='$name']]")
                if (!$node) {
                  $node = $settingsDocument.CreateElement('item')
                  $node.InnerXml = "<key><string>$name</string></key><value><string/></value>"
                  $settingsDocument.dictionary.AppendChild($node) | Out-Null
                }
                if ($value -cne $node.value.string) {
                  $node.value.string = $value
                  $settingsDocument.Save($settingsPath)
                  $Ansible.Changed = $true
                }
              }
              Set-GitExtensionsStringSetting TelemetryEnabled false
              Set-GitExtensionsStringSetting translation English
              Set-GitExtensionsStringSetting gitbindir 'C:\Program Files\Git\bin\'

    - name: Install WSL
      ansible.builtin.include_role:
        name: wsl

- name: WSL Example
  hosts: wsl
  gather_facts: true
  become: true
  roles:
    - wsl_ubuntu
