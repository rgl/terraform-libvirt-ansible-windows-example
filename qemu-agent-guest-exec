#!/usr/bin/python3
'''
Execute a command inside the guest.
'''

import base64
import json
import libvirt
import libvirt_qemu
import logging
import sys
import time

domain_name = sys.argv[1]
command_path = sys.argv[2]
command_args = sys.argv[3:]

try:
    connection = libvirt.open(None)
except libvirt.libvirtError:
    logging.exception('Failed to open connection to the hypervisor')
    exit(1)

try:
    domain = connection.lookupByName(domain_name)
except libvirt.libvirtError:
    logging.exception(f'Domain {domain_name} is not running')
    exit(1)

# execute a command inside the guest.
# see https://libvirt.org/html/libvirt-libvirt-qemu.html#virDomainQemuAgentCommand
while True:
    command = json.dumps({
        'execute': 'guest-exec',
        'arguments': {
            'path': command_path,
            'arg': command_args,
            'capture-output': True,
        }
    })
    result = json.loads(libvirt_qemu.qemuAgentCommand(domain, command, -2, 0))
    command = json.dumps({
        'execute': 'guest-exec-status',
        'arguments': {
            'pid': result['return']['pid'],
        }
    })
    try:
        while True:
            result = json.loads(libvirt_qemu.qemuAgentCommand(domain, command, -2, 0))
            if result['return']['exited'] and 'out-data' in result['return']:
                print(base64.b64decode(result['return']['out-data']).decode('utf-8'))
                break
            time.sleep(0.1)
        break
    except libvirt.libvirtError as e:
        # let it retry when the error message is one of:
        #   libvirt.libvirtError: internal error: unable to execute QEMU agent command 'guest-exec-status': Invalid parameter 'pid'
        #   libvirt.libvirtError: internal error: unable to execute QEMU agent command 'guest-exec-status': PID lld does not exist
        error_message = str(e)
        if not ("Invalid parameter 'pid'" in error_message or "PID lld does not exist" in error_message):
            raise
    time.sleep(3)
